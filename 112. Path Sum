/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean hasPathSum(TreeNode root, int targetSum) {
        return dfs(root, 0, targetSum);
    }

    public boolean dfs(TreeNode root, int sum, int targetSum) {

        if (root == null) {
            return false;
        }

        // If it's a leaf node, check if the sum equals the targetSum
        if (root.left == null && root.right == null) {
            return sum + root.val == targetSum;
        }

        boolean leftPath = dfs(root.left, sum + root.val, targetSum);
        boolean rightPath = dfs(root.right, sum + root.val, targetSum);
    
        return leftPath || rightPath;
    }
}
