# Leetcode | Merge Two Linked Lists

class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        
        # creating dummy node not to worry about the edge case of inserting into an empty list
        dummy = ListNode()
        tail = dummy

        # make sure both lists contain vals so as to compare them
        while list1 and list2:

            # add vals to tail from small to large by comparing the list1 and list2
            if list1.val < list2.val:
                tail.next = list1
                list1 = list1.next
            else:
                tail.next = list2
                list2 = list2.next
            tail = tail.next
        
        # in case of there are still remained value in list1 or list2
        # add all the rest values to tail
        if list1:
            tail.next = list1
        elif list2:
            tail.next = list2
        
        # skip the zero value as an initial default value
        return dummy.next
